name: RunPod On Master Merge

on:
  push:
    branches:
      - master

jobs:
  runpod-job:
    runs-on: ubuntu-latest

    steps:
      - name: Start RunPod instance
        id: start_pod
        run: |
          echo "Starting RunPod pod..."
          echo ${{ secrets.RUNPOD_API_KEY }}
          POD_TEMPLATE_ID="lkwpvoo6fz"

          RESPONSE=$(curl -s --request POST \
            --header 'content-type: application/json' \
            --url 'https://api.runpod.io/graphql?api_key=${{ secrets.RUNPOD_API_KEY }}' \
            --data '{
              "query": "mutation { podFindAndDeployOnDemand( input: { cloudType: ALL, gpuCount: 1, volumeInGb: 40, containerDiskInGb: 40, minVcpuCount: 2, minMemoryInGb: 15, gpuTypeId: \"NVIDIA RTX A6000\", name: \"Runpod Tensorflow\", imageName: \"runpod/tensorflow\", dockerArgs: \"\", ports: \"8888/http\", volumeMountPath: \"/workspace\", env: [{ key: \"JUPYTER_PASSWORD\", value: \"rn51hunbpgtltcpac3ol\" }] } ) { id imageName } }"
            }')

          echo "RunPod API Response: $RESPONSE"
          POD_ID=$(echo "$RESPONSE" | jq -r '.data.podFindAndDeployOnDemand.id')

          if [ "$POD_ID" == "null" ] || [ -z "$POD_ID" ]; then
            echo "❌ Failed to start RunPod pod."
            exit 1
          fi

          echo "✅ Started pod: $POD_ID"
          echo "POD_ID=$POD_ID" >> $GITHUB_ENV

      - name: Wait for 1 minute
        run: sleep 60

      - name: Terminate RunPod instance
        if: env.POD_ID != ''
        run: |
          echo "Stopping RunPod pod $POD_ID..."

          curl -s --request POST \
            --header 'content-type: application/json' \
            --url 'https://api.runpod.io/graphql?api_key=${{ secrets.RUNPOD_API_KEY }}' \
            --data "{
              \"query\": \"mutation { podTerminate(input: { podId: \\\"$POD_ID\\\" }) { id } }\"
            }"

          echo "✅ Terminated pod $POD_ID"
